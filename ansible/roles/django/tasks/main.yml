---
# tasks file for django

- name: Set up virtualenvs
  debug:
    var: "{{ hostvars[inventory_hostname]|json_query('django_projects[?present=true].{name: name, python: python, owner: user, group: group, requirements: requirements}') }}"
    verbosity: 4

- name: Create django static directory
  file:
    path: "{{ item.static_root }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  when: "{{ item.present|default(false) }}"
  with_items: "{{ django_projects }}"

- name: Create django media directory
  file:
    path: "{{ item.static_root }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  when: "{{ item.present|default(false) }}"
  with_items: "{{ django_projects }}"

- name: Fetch local_settings template
  fetch:
    src: "{{ item.settings_remote_path }}"
    dest: "django/local_settings-{{ inventory_hostname }}.j2"
    flat: yes
  when: "{{ item.present|default(false) }}"
  with_items: "{{ django_projects }}"
  
- name: Create local_settings.py
  template:
    src: "django/local_settings-{{ inventory_hostname }}.j2"
    dest: "{{ item.settings_path }}"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  when: "{{ item.present|default(false) }}"
  with_items: "{{ django_projects }}"

- name: Migrate django database
  shell: "{{ item.virtualenv }}/bin/python {{ item.cwd }}/manage.py migrate"
  when: "{{ item.present|default(false) and item.migrate|default(false) }}"
  with_items: "{{ django_projects }}"

- name: Create default admin
  shell: "{{ item.virtualenv }}/bin/python {{ item.cwd }}/manage.py create_adminuser"
  when: "{{ item.present|default(false) and item.default_admin|default(false) }}" 
  with_items: "{{ django_projects }}"

- name: Collect django static files
  shell: "{{ item.virtualenv }}/bin/python {{ item.cwd }}/manage.py collectstatic --noinput"
  when: "{{ item.present|default(false) and item.collectstatic|default(false) and item.present|default(false)  }}"
  with_items: "{{ django_projects }}"

- name: Ensure permissions of static directory
  file:
    path: "{{ item.static_root }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    recurse: yes
  when: "{{ item.present|default(false) }}"
  with_items: "{{ django_projects }}"

- name: Ensure permissions of media directory
  file:
    path: "{{ item.media_root }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    recurse: yes
  when: "{{ item.present|default(false) }}"
  with_items: "{{ django_projects }}"

